8장 동적 모델링
동적 모델링 : 시스템의 제어 흐름, 상호작용, 동작의 순서를 나타내며 여기서 ‘제어’는 외부의 자극에 시스템이 어떠한 동작을 수행하는지를 나타내는 것이다.
실시간 시스템
-제한된 시간 내에 외부에서 주어진 사건에 응답하고 자료를 처리하는 시스템.
-특성상 다른 SW시스템보다 어렵고 특수한 분석, 설계, 시험 기법을 필요로 하며 여러 프로세스를 병행으로 수행하거나 프로세스 처리에 우선순위를 가지고 자원에 대한 동시접근 및 할당을 하게 되고 이에 대한 제어 기능이 주어진다.
유한 상태 기계
-실시간 시스템을 나타내기 위해 제공되는 그래픽 표기법.
-제어, 기능, 자료의 3가지 요소를 사용하여 나타내며 기능은 자료의 변환, 자료는 기능의 입출력, 제어는 기능이 일어나는 순서를 나타낸다.
-유한상태 기계는 특정언어를 고려한 것이 아니며, 모델링 결과는 어느 프로그래밍언어로나 구현 가능하다. 언어와의 독립성을 가진다.
-대부분의 실시간 분석기법은 유한상태기계를 확장한 것이고, 시스템 동작과 수행순서를 모델링하기 쉬운 장점을 가진다.
상태변화도
-시스템이 가지고 있는 값을 표시하는 상태와 외부에서의 상태에서 사건을 중점으로 분석한다.
-유한상태기계를 도식적으로 표현한 것이다. 시스템의 제어 흐름과 동작 순서를 나타낸다.
-유한상태기계와 마찬가지로 사건들에 의해 변화하는 시스템 동작을 나타낸다.
-상태는 시스템이 가지는 속성값에 의해 결정되며 사건은 외부 자극에 의해 일어난다.
-사건은 시스템을 어떤 한 상태에서 다른 상태로 이동하게 하여 시스템 상태를 변경하거나 다른 사건을 유발시킬 수 있다.
실시간 시스템을 위한 구조적 분석 기법의 확장
-시스템의 상태 변화와 프로세스의 활성화를 나타낼 때 사용한다.
-데이터와 데이터의 처리 및 결과를 돌려주는 환경을 제어할 수 있도록 시스템을 기술하는 것을 말한다.
-기능 모델과 동적 모델을 결합시킨 복합적 모델이다.
*제어 명세서 : 시스템 행위를 기술하는 데 사용. 다양한 제어 흐름에서 어떠한 시나리오가 발생되는지 나타낸다. 시스템 동작을 나타내므로 개발 초기의 문제점과 개발 후 시스템 동작에 문제가 있는지 쉽게 파악할 수 있다.
*프로세스 활성표 : 주어진 사건에 의해 특정 프로세스를 활성화 시키는 동작을 기술하는데 사용하며 프로세스의 활성, 비활성에 어떤 입력이 주어져야 하는지를 테이블로 표시한다.
*결정표 : 한 프로세스와 연관된 모든 동작을 표시하거나, 프로세스수행중 요구되는 결정이나 조건을 기술하는데 사용된다. 입력제어조건의 순서를 고려하지 않는 조합 논리를 나타내는데 적합하며, 출력값을 갖기 위한 입력값을 테이블로 표시한다.
*상태변화도: 시스템의 상태와 상태를 변하게 하는 사건을 기술하고, 시스템의 행위를 표현한다.
*상태 사건표 : 상태변화도의 정보를 테이블로 표현한 것으로 열에는 사건, 행에는 상태를 나타낸다. 주어진 상태에서 사건이 발생하여 새로운 상태로 옮겨가는 모습을 보여준다.
9장 정보 모델링
정보 모델링 : 시스템에 사용되는 DB의 구조를 알아내어 데이터를 개념적으로 기술. 구현 세부사항을 숨기고 데이터 관련 요구사항만 기술한다. 주로 ER모델을 사용한다.
엔티티, 속성, 엔티티 타입
ER모델은 객체를 나타내는 엔티티들과 객체 사이의 연관성을 나타내는 관계로 구성된다.
엔티티 : 엔티티는 독립적으로 실세계에 존재하는 사물과 객체를 나타낸다.
속성 : 각 객체는 특성 속성을 가진 모임에 의해 기술되며 속성 값으로 구별된다.
엔티티 타입 : 엔티티 타입은 한 시스템 안에 유사한 속성을 가진 엔티티들의 집합이다.
분류화 : 묶어진 엔티티 타입을 기술하는 것. 묶여진 객체들은 같은 종류의 속성, 제약조건 및 동작유형을 공유한다. <ER모델에서 사각형으로 나타낸다.>
실례화 : 분류화의 역작용.
관계, 관계타입, 제약조건
관계 : 한 시스템이 가지는 엔티티들의 연관성.
관계 타입 : 같은 형태를 갖는 관계들의 집합. 엔티티 타입처럼 고유의 속성들을 가질 수 있으며 참여하는 엔티티 타입의 키가 관계 타입의 키가 된다.
참여하는 엔티티 타입의 키 외에 다른 속성이 합쳐져 관계타입 키를 형성하기도 한다.<ER모델에서 마름모로 나타낸다.>
매핑 제약 조건 : 하나의 관계타입을 통해 참여하는 엔티티 타입 내의 엔티티 사이의 매핑 수를 제한한다. 매핑 수는 일대일, 일대다, 다대다로 구성된다.
참여 제약 조건 : 엔티티가 관계에 참여하는 것이 필수인지 지정해주는 조건이다.
관계타입 차수 : 참여하는 엔티티 타입의 수를 뜻하며 2인 경우 2차 관계타입, 3인 경우 3차 관계타입이라고 한다. 서로 다른 차수를 가지면 대치될 수 없다.
일반화
ERR모델은 ER모델에 일반화 등의 계층적 구조를 추가한 것이다.
일반화 : 엔티티 타입에 유사성이 존재할 경우 유사성을 모아 새로운 엔티티 타입을 정의하는 것. 일반화를 통해 나타내는 특성은 상위 클래스에 하위 클래스들의 공통적 속성을 표시하고, 하위 클래스가 상위 클래스를 상속하는 형태로 나타낸다. 분석 결과를 재활용할 수 있게 해 준다.
가이드라인
엔티티 가이드라인
문제 기술에 명사가 있으면 이를 분석하여 엔티티로 고려한다. 명사가 값을 가지면 속성이 된다. 정보를 추적하고 싶을 때에도 엔티티로 고려해야 한다. 엔티티인지 속성인지 모호할 때는 엔티티로 두어야 한다. 데이터에 관한 정의가 있으면 그 데이터를 포함하는 엔티티의 이름을 쉽게 찾을 수 있다.
관계 가이드라인
관계 가이드라인은 주로 동사로 표현한다. 문제 기술에 동사가 있으면 이를 분석하여 관계로 고려한다. 불명확한 엔티티의 경우에도 관계로 고려하는 것이 좋다. 만약 데이터가 두 엔티티를 기술하고 있다면 관계로 표시한다. 한 레코드가 두 개 이상의 고유 번호를 가지면 관계로 고려한다.
